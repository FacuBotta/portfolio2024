---
import { getLangFromUrl, useTranslations } from '../i18n/utils';
import type { ProjectType } from '../types';
import GitHubMiniIcon from './icons/GitHubMiniIcon.astro';
import type { IconName } from './icons/icon-names';
import OpenLinkIcon from './icons/OpenLinkIcon.astro';
import IconWrapper from './IconWrapper.astro';

const { title, description, link_repo, link_demo, image, stack, index } =
  Astro.props as ProjectType & { index: number };

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<article
  class={`flex ${index % 2 === 0 ? 'flex-row-reverse' : 'flex'} justify-center gap-5 w-full mt-10 flex-wrap-reverse lg:flex-nowrap`}
>
  <label class="w-full h-[80vw] lg:h-auto lg:w-1/2 lg:cursor-zoom-in relative">
    <input type="checkbox" class="hidden peer" />

    <!-- Modal que aparece al hacer clic -->
    <div
      class="image-modal fixed inset-0 h-screen w-screen py-10 bg-black/70 peer-checked:flex hidden justify-center items-center z-20 overflow-auto"
    >
      <img
        src={`/projectsImages/${image}`}
        alt={`Imagen del proyecto: ${title[lang]}`}
        class="lg:min-h-[85%] object-contain rounded-md border-2 border-white/50 cursor-zoom-out"
      />
    </div>

    <!-- Vista en miniatura de la imagen en el fondo del label -->
    <img
      src={`/projectsImages/${image}`}
      alt={`Imagen del proyecto: ${title[lang]}`}
      class="animate-card-in-viewport w-full lg:h-full object-contain lg:object-cover rounded-md border-2 border-white/50 cursor-zoom-in"
    />
  </label>
  <div
    class="animate-card-in-viewport flex flex-col justify-between gap-5 lg:mx-0 w-full lg:w-1/2 border-2 p-5 rounded-lg select-none"
  >
    <div class="flex justify-between flex-wrap lg:flex-nowrap">
      <h3 class="font-bold text-2xl text-balance">{title[lang]}</h3>
      <div class="flex flex-wrap gap-2">
        <a
          class="flex gap-1 items-center border mt-2 lg:mt-0 h-8 p-[5px] rounded-lg text-nowrap hover:border-primary-cyan hover:text-primary-cyan transition-colors ease-in-out duration-300"
          href={link_repo}
          target="_blank"
          rel="noopener noreferrer"
          aria-label={`Enlace al repositorio del proyecto: ${title[lang]}`}
          >{t('projects.repoBtn')}
          <GitHubMiniIcon color="currentColor" />
        </a>
        {
          link_demo && (
            <a
              class="flex gap-1 items-center border mt-2 lg:mt-0 h-8 p-[5px] rounded-lg text-nowrap hover:border-primary-yellow hover:text-primary-yellow transition-colors ease-in-out duration-300"
              href={link_demo}
              target="_blank"
              rel="noopener noreferrer"
              aria-label={`Enlace al repositorio del proyecto: ${title[lang]}`}
            >
              {t('projects.demoBtn')}
              <OpenLinkIcon />
            </a>
          )
        }
      </div>
    </div>
    <p class="text-white/70 text-sm lg:text-lg">{description[lang]}</p>
    <div class="flex flex-col gap-5">
      <h4 class="text-xl font-semibold">{t('projects.stack')}</h4>
      <div class="flex gap-5 flex-wrap w-full">
        {stack.map((icon: IconName) => <IconWrapper iconName={icon} />)}
      </div>
    </div>
  </div>
</article>

<style>
  .image-modal {
    touch-action: pinch-zoom; /* Permite gestos de zoom solo en el modal */
    overscroll-behavior: contain; /* Evita que el scroll afecte fuera del modal */
  }
  .animate-card-in-viewport {
    animation-timeline: view();
    animation-name: animate-project-card;
    animation-duration: 1ms;
  }
  @keyframes animate-project-card {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }
  .image-modal {
    animation: none !important;
  }
</style>
