---
import LinkedInIcon from "./icons/LinkedInIcon.astro";
import GitHubMiniIcon from "./icons/GitHubMiniIcon.astro";
import GmailIcon from "./icons/GmailIcon.astro";
---

<div class="presentation-container">
  <div class="absolute top-20 text-[2rem]">
    <p class="message-1"></p>
    <p class="message-2"></p>
    <p class="message-3"></p>
    <p class="message-4"></p>
  </div>
  <h1 class="message-5 hidden">FacuDev</h1>
  <p
    class="message-description hidden text-gradient w-[80%] text-center ml-10 mt-5 text-[1.4rem]"
  >
  </p>
  <div
    class="relative buttons-container flex justify-center gap-3 h-10 w-full mt-5"
  >
    <!-- LinkedIn -->
    <a
      class="hidden peer/linkedIn rounded-full"
      href="https://www.linkedin.com/in/facundo-botta/"
      target="_blank"
    >
      <LinkedInIcon class="h-full w-full" />
    </a>
    <div
      class="font-semibold text-sm opacity-0 absolute top-[130%] peer-hover/linkedIn:opacity-100 flex-col transition-opacity duration-300 ease-in-out cursor-default"
    >
      <p>Visit my LinkedIn</p>
      <p class="text-xs font-extralight">Ctrl+click to copy link</p>
    </div>

    <!-- GitHub -->
    <a
      class="hidden peer/gitHub rounded-full"
      href="https://github.com/FacuBotta"
      target="_blank"
    >
      <GitHubMiniIcon class="h-full w-full" />
    </a>
    <div
      class="font-semibold text-sm opacity-0 absolute top-[130%] peer-hover/gitHub:opacity-100 flex-col transition-opacity duration-300 ease-in-out cursor-default"
    >
      <p>Check my GitHub!</p>
      <p class="text-xs font-extralight">Ctrl+click to copy link</p>
    </div>

    <!-- Gmail -->
    <a
      class="hidden peer/gmail rounded-full"
      href="mailto:facundo.botta.dev@gmail.com"
      target="_blank"
    >
      <GmailIcon class="h-full w-full" />
    </a>
    <div
      class="font-semibold text-sm opacity-0 absolute top-[130%] peer-hover/gmail:opacity-100 flex-col transition-opacity duration-300 ease-in-out cursor-default"
    >
      <p>Email me via Gmail</p>
      <p class="text-xs font-extralight">Ctrl+click to copy address</p>
    </div>
  </div>
</div>

<script>
  const message1 = document.querySelector(".message-1");
  const message2 = document.querySelector(".message-2");
  const message3 = document.querySelector(".message-3");
  const message4 = document.querySelector(".message-4");
  const message5 = document.querySelector(".message-5");
  const messageDescription = document.querySelector(".message-description");
  const buttonsContainer = document.querySelector(".buttons-container");
  const iconsLinks = buttonsContainer?.querySelectorAll("a");

  const myDescription =
    "I'm a fullstack developer student, passionate about building and learning new things every day. I always put my best effort into taking my applications to the next level.\n Let's work together!";

  const welcomeMessages = [
    "Hi there!",
    "Welcome to my portfolio...",
    "My name is Facundo Botta...",
    "But everybody call me...",
  ];
  const writeTextAnimation = (
    textToInsert: string,
    elementTarget: any,
    typingSpeed: number = 50
  ) => {
    let tempMessage = "";

    for (let i = 0; i < textToInsert.length; i++) {
      setTimeout(() => {
        if (elementTarget) {
          tempMessage += textToInsert[i];
          elementTarget.textContent = tempMessage;
        }
      }, typingSpeed * i);
    }
  };
  function copyLink(event: any) {
    if (event.ctrlKey) {
      let link = event.currentTarget.getAttribute("href");

      const mailtoRegex = /mailto:(.*)/;
      if (mailtoRegex.test(link)) {
        link = link.replace(mailtoRegex, "$1");
      }
      console.log(link);

      const copyMessageContainer = event.currentTarget.nextElementSibling;
      const messages = copyMessageContainer.querySelectorAll("p");

      navigator.clipboard
        .writeText(link)
        .then(() => {
          if (copyMessageContainer) {
            const prevContent1 = messages[0].textContent;
            const prevContent2 = messages[1].textContent;

            messages[0].textContent = "Copied!";
            messages[1].textContent = link;

            setTimeout(() => {
              messages[0].textContent = prevContent1;
              messages[1].textContent = prevContent2;
            }, 2000);
          }
        })
        .catch((err) => {
          console.error("Error coping link:", err);
        });

      event.preventDefault();
    }
  }

  const links = document.querySelectorAll(".buttons-container a");

  links.forEach((link) => {
    link.addEventListener("click", copyLink);
  });

  window.addEventListener("load", () => {
    setTimeout(() => {
      writeTextAnimation(welcomeMessages[0], message1);
    }, 1000);
    setTimeout(() => {
      message1?.classList.toggle("animate-message");
      writeTextAnimation(welcomeMessages[1], message2, 40);
    }, 2000);
    setTimeout(() => {
      message2?.classList.toggle("animate-message");
      writeTextAnimation(welcomeMessages[2], message3, 35);
    }, 3500);
    setTimeout(() => {
      message3?.classList.toggle("animate-message");
      writeTextAnimation(welcomeMessages[3], message4, 30);
    }, 5000);
    setTimeout(() => {
      message4?.classList.toggle("animate-message");
      message5?.classList.toggle("animate-facuDev");
    }, 6500);
    setTimeout(() => {
      messageDescription?.classList.toggle("hidden");
      writeTextAnimation(myDescription, messageDescription, 12);
    }, 7500);
    setTimeout(() => {
      iconsLinks?.forEach((iconLink, index) => {
        setTimeout(() => {
          iconLink?.classList.replace("hidden", "animate-icons");
        }, index * 200); // El delay entre íconos (200ms de diferencia)
      });
    }, 10500);
  });
</script>
<style>
  .presentation-container {
    height: 100%;
    width: 100%;
    padding-top: 50px;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: center;
    text-align: center;
    gap: 2rem;
  }
  .animate-icons {
    display: inline-block;
    height: 100%;
    opacity: 0;
    animation: fadeInAndBounce 0.8s forwards ease-out; /* Duración ajustada */
  }
  .buttons-container a:hover {
    scale: 1.1;
    box-shadow: rgba(197, 197, 197, 0.625) 0px 5px 15px;
    transition: all 0.4s ease-in-out;
  }
  @keyframes fadeInAndBounce {
    0% {
      opacity: 0;
      transform: scale(0.6);
    }
    60% {
      opacity: 1;
      transform: scale(1.1);
    }
    80% {
      transform: scale(0.95);
    }
    100% {
      opacity: 1;
      transform: scale(1);
    }
  }
  .animate-message {
    animation: fadeOut 1s forwards;
  }
  .animate-facuDev {
    display: inline-block;
    animation: fadeInFacuDev 1s forwards;
  }
  .presentation-container h1 {
    font-family: "Royal Fight", serif;
    font-size: 7rem;
    color: transparent;
    -webkit-text-stroke: 3px #d6f4f4;
    text-shadow:
      8px 8px 0px #07bccc,
      13px 13px 0px #e601c0,
      18px 18px 0px #e9019a,
      23px 23px 0px #f40468;
    /* 45px 45px 10px #e9e4a444; */
  }
  @keyframes fadeOut {
    0% {
      opacity: 1;
    }
    100% {
      opacity: 0;
    }
  }
  @keyframes fadeInFacuDev {
    0% {
      opacity: 0;
      transform: translateY(50px);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }
  .text-gradient {
    font-weight: 600;
    background-image: var(--description-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 100%;
    background-position: 0%;
  }
</style>
